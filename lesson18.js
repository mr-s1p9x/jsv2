// Преобразование типов
const age2 = '18';
console.log(age2 + 5); // получим 185, что нас не устраивает

// Так как же все такие сложить число и строку? преобразовать типы:
console.log(Number(age2) + 5); // Преобазовываем age2 к числу, получим 23
console.log(Number(age2) - 3); // 15

const userName = 'Ivan';
console.log(userName + 5); // Получим Ivan5
// А если преобразуем имя к числу?
console.log(Number(userName) + 5); // Получим NaN - Not a Number, что логично
console.log(typeof NaN); // но тип NaN - это number

// Мы можем конвертировать и строки
console.log(String(4) + 7); // Строка + число = 47

// Тоже самое будет с Boolean
console.log(Boolean(1)) // 1 - true, 0 - false
// Если трока пустая '' - будет false - Boolean('')

// Boolean позволяет использовать его как число при конвертации
console.log(Boolean('') + 11); // Будет 11, тк пустая строка = 0, то 0 + 11 = 11
console.log(Boolean(' ') + 11); //  Будет 12, тк строка не пустая, а значит она true = 1, 1 + 11 = 12
console.log(true + 3); // 4

// Пример с вычитанием строки
const x = 2 + '10'; // сложатся строки, получим 210
console.log(typeof(x)); // string, 210

x2 = x - 10;
console.log(typeof(x2)); // number, 200
// JS преобразует строку к числу и вычитает 210 - 10 = 200
// Часть операторов преобразуют к одному типу, а часть к другому
// Поэтому, в коде лучше всего сразу явно преобразовывать типы, немного дольше по времени, но меньше нюансов





















































